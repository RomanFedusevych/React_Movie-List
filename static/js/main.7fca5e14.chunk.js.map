{"version":3,"sources":["components/MovieCard/MovieCard.tsx","api/api.tsx","components/MovieList/MovieList.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","useState","data","genreName","genreNameArr","forEach","y","i","genre_ids","length","id","name","className","src","poster_path","alt","title","release_date","API_URL","loadGenres","genre","page","a","withGenre","value","fetch","response","json","options","label","MovieList","updateData","pageApi","movies","setMovie","selectedOption","setSelectedOption","currentPage","moviesPerPage","useEffect","results","getMovies","lastPageIndex","firstPageIndex","currentMovies","sort","b","Date","getTime","slice","defaultValue","onChange","map","Pagination","setPageApi","pageNumbers","push","type","onClick","num","number","href","App","pageNum","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k6BAQaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MACR,EAAoBC,mBAASC,GAAtBC,EAAP,oBACIC,EAAe,GAYnB,OAVAD,EAAUE,SAAQ,SAACC,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAMQ,UAAUC,OAAQF,GAAK,EAC5CD,EAAEI,KAAOV,EAAMQ,UAAUD,KAC3BH,GAAY,UAAOE,EAAEK,KAAT,QAIhB,OAAOP,KAIP,qCACE,qBACEQ,UAAU,iBACVC,IAAG,8CAAyCb,EAAMc,aAClDC,IAAI,aAEN,qBAAKH,UAAU,mBAAf,SAAmCZ,EAAMgB,QACzC,sBAAKJ,UAAU,mBAAf,UACE,sBAAMA,UAAU,0BAAhB,oBACA,uCACCR,KAEH,qBAAKQ,UAAU,kBAAf,SAAkCZ,EAAMiB,mBCnCxCC,EAAO,sDADG,2CACH,YAEAC,EAAU,uCAAG,WAAOC,EAAwBC,GAA/B,iBAAAC,EAAA,6DACpBC,EAAY,GAEZH,IACFG,EAAS,uBAAmBH,EAAMI,QAJZ,SAODC,MAAM,GAAD,OAAIP,GAAJ,OAAcK,EAAd,iBAAgCF,IAPpC,cAOlBK,EAPkB,yBASjBA,EAASC,QATQ,2CAAH,wDCEjBC,EAAU,CACd,CAAEJ,MAAO,KAAMK,MAAO,UACtB,CAAEL,MAAO,KAAMK,MAAO,aACtB,CAAEL,MAAO,KAAMK,MAAO,UACtB,CAAEL,MAAO,KAAMK,MAAO,SACtB,CAAEL,MAAO,KAAMK,MAAO,SACtB,CAAEL,MAAO,KAAMK,MAAO,WACtB,CAAEL,MAAO,KAAMK,MAAO,WACtB,CAAEL,MAAO,KAAMK,MAAO,UACtB,CAAEL,MAAO,KAAMK,MAAO,YACtB,CAAEL,MAAO,KAAMK,MAAO,YAQXC,EAA6B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACvD,EAA2B/B,mBAAS,IAApC,mBAAOgC,EAAP,KAAeC,EAAf,KACA,EAA4CjC,mBAA0B,MAAtE,mBAAOkC,EAAP,KAAuBC,EAAvB,KACA,EAAsBnC,mBAAS,GAAxBoC,EAAP,oBACA,EAAwBpC,mBAAS,GAA1BqC,EAAP,oBAEAC,qBAAU,YACO,uCAAG,4BAAAjB,EAAA,sEACGH,EAAWgB,EAAgBH,GAD9B,OACV9B,EADU,OAGhBgC,EAAShC,EAAKsC,SACdT,EAAWC,GAJK,2CAAH,qDAOfS,KACC,CAACN,EAAgBH,IAEpB,IAEMU,EAAgBL,EAAcC,EAC9BK,EAAiBD,EAAgBJ,EACjCM,EAJeX,EAAOY,MAAK,SAACvB,EAAUwB,GAAX,OAAwB,IAAIC,KAAKD,EAAE7B,cAAc+B,UAChF,IAAID,KAAKzB,EAAEL,cAAc+B,aAGQC,MAAMN,EAAgBD,GAEzD,OACE,qCACE,sBAAK9B,UAAU,gBAAf,UACE,sBAAMA,UAAU,sBAAhB,gCACA,cAAC,IAAD,CACEA,UAAU,cACVsC,aAAcf,EACdgB,SAAUf,EACVR,QAASA,OAGb,oBAAIhB,UAAU,qBAAd,SACGgC,EAAcQ,KAAI,SAACpD,GAAD,OACjB,oBACEY,UAAU,2BADZ,SAIE,cAAC,EAAD,CAAWZ,MAAOA,KAFbA,EAAMU,aCrDV2C,G,MAA8B,SAAC,GAG1C,IAHuE,IAA3BrB,EAA0B,EAA1BA,QAASsB,EAAiB,EAAjBA,WAC/CC,EAAc,GAEXhD,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BgD,EAAYC,KAAKjD,GAOnB,OACE,sBAAKK,UAAU,6BAAf,UACE,wBACEA,UAAWoB,GAAW,EAClB,gDACA,kCACJyB,KAAK,SACLC,QAAS,kBAAMJ,GAXDK,EAWuB3B,GAV5B,GAAK,EAAI,EAAI2B,EAAM,GADf,IAACA,GAMhB,kBASA,oBAAI/C,UAAU,8BAAd,SACG2C,EAAYH,KAAI,SAACQ,GAAD,OACf,oBACEhD,UAAWgD,IAAW5B,EAClB,oCACA,6BAHN,SAME,wBACEpB,UAAU,2BACV6C,KAAK,SACLC,QAAS,kBAAMJ,EAAWM,IAH5B,SAKE,mBACEC,KAAK,KACLjD,UAAU,6BAFZ,SAIGgD,OAXAA,QAiBX,wBACEhD,UAAWoB,GAAW,GAClB,gDACA,kCACJyB,KAAK,SACLC,QAAS,kBAAMJ,EAAWtB,GAAW,GAAKA,EAAU,EAAIA,IAL1D,uBChDO8B,EAAM,WACjB,MAA8B7D,mBAAiB,GAA/C,mBAAO+B,EAAP,KAAgBsB,EAAhB,KAKA,OACE,qBAAK1C,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAWmB,WAPE,SAACgC,GAClBT,EAAWS,IAM4B/B,QAASA,IAC5C,cAAC,EAAD,CAAYA,QAASA,EAASsB,WAAYA,UCVlDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7fca5e14.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport data from '../../api/genresName.json';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie : Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n  const [genreName] = useState(data);\n  let genreNameArr = '';\n\n  genreName.forEach((y) => {\n    for (let i = 0; i <= movie.genre_ids.length; i += 1) {\n      if (y.id === movie.genre_ids[i]) {\n        genreNameArr += `${y.name} | `;\n      }\n    }\n\n    return genreNameArr;\n  });\n\n  return (\n    <>\n      <img\n        className=\"movieCard__img\"\n        src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n        alt=\"movieImg\"\n      />\n      <div className=\"movieCard__title\">{movie.title}</div>\n      <div className=\"movieCard__genre\">\n        <span className=\"movieCard__genre--title\">Genre:</span>\n        <span> | </span>\n        {genreNameArr}\n      </div>\n      <div className=\"movieCard__year\">{movie.release_date}</div>\n\n    </>\n  );\n};\n","const API_KEY = 'api_key=d02889a458f7e3d57af07edb461cf97e';\nconst API_URL = `https://api.themoviedb.org/3/discover/movie?${API_KEY}&page=10`;\n\nexport const loadGenres = async (genre: Selected | null, page: number) => {\n  let withGenre = '';\n\n  if (genre) {\n    withGenre = `&with_genres=${genre.value}`;\n  }\n\n  const response = await fetch(`${API_URL}${withGenre}&page=${page}`);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { MovieCard } from '../MovieCard';\nimport { loadGenres } from '../../api/api';\n\nconst options = [\n  { value: '28', label: 'Action' },\n  { value: '12', label: 'Adventure' },\n  { value: '35', label: 'Comedy' },\n  { value: '80', label: 'Crime' },\n  { value: '18', label: 'Drama' },\n  { value: '14', label: 'Fantasy' },\n  { value: '36', label: 'History' },\n  { value: '27', label: 'Horror' },\n  { value: '53', label: 'Thriller' },\n  { value: '37', label: 'Western' },\n];\n\ntype Props = {\n  pageApi: number;\n  updateData: (pageApi: number) => void\n};\n\nexport const MovieList: React.FC<Props> = ({ updateData, pageApi }) => {\n  const [movies, setMovie] = useState([]);\n  const [selectedOption, setSelectedOption] = useState<Selected | null>(null);\n  const [currentPage] = useState(0);\n  const [moviesPerPage] = useState(9);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const data = await loadGenres(selectedOption, pageApi);\n\n      setMovie(data.results);\n      updateData(pageApi);\n    };\n\n    getMovies();\n  }, [selectedOption, pageApi]);\n\n  const sortedMovies = movies.sort((a: Movie, b: Movie) => new Date(b.release_date).getTime()\n  - new Date(a.release_date).getTime());\n  const lastPageIndex = currentPage + moviesPerPage;\n  const firstPageIndex = lastPageIndex - moviesPerPage;\n  const currentMovies = sortedMovies.slice(firstPageIndex, lastPageIndex);\n\n  return (\n    <>\n      <div className=\"App__selector\">\n        <span className=\"App__selector--text\">Filtred by genres:</span>\n        <Select\n          className=\"App__select\"\n          defaultValue={selectedOption}\n          onChange={setSelectedOption}\n          options={options}\n        />\n      </div>\n      <ul className=\"App__listContainer\">\n        {currentMovies.map((movie: Movie) => (\n          <li\n            className=\"App__movieCard movieCard\"\n            key={movie.id}\n          >\n            <MovieCard movie={movie} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  pageApi: number;\n  setPageApi: (num: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({ pageApi, setPageApi }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= 10; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const buttonPrev = (num: number) => {\n    return num - 1 <= 0 ? 1 : num - 1;\n  };\n\n  return (\n    <div className=\"App__pagination pagination\">\n      <button\n        className={pageApi <= 1\n          ? 'pagination__button btn btn-secondary disabled'\n          : 'pagination__button btn btn-dark'}\n        type=\"button\"\n        onClick={() => setPageApi(buttonPrev(pageApi))}\n      >\n        Prev\n      </button>\n      <ul className=\"pagination__list pagination\">\n        {pageNumbers.map((number) => (\n          <li\n            className={number === pageApi\n              ? 'pagination__item page-item active'\n              : 'pagination__item page-item'}\n            key={number}\n          >\n            <button\n              className=\"pagination__button--link\"\n              type=\"button\"\n              onClick={() => setPageApi(number)}\n            >\n              <a\n                href=\"/#\"\n                className=\"pagination__link page-link\"\n              >\n                {number}\n              </a>\n            </button>\n          </li>\n        ))}\n      </ul>\n      <button\n        className={pageApi >= 10\n          ? 'pagination__button btn btn-secondary disabled'\n          : 'pagination__button btn btn-dark'}\n        type=\"button\"\n        onClick={() => setPageApi(pageApi <= 10 ? pageApi + 1 : pageApi)}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MovieList } from './components/MovieList';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App = () => {\n  const [pageApi, setPageApi] = useState<number>(1);\n  const updateData = (pageNum: number) => {\n    setPageApi(pageNum);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__movieList\">\n        <MovieList updateData={updateData} pageApi={pageApi} />\n        <Pagination pageApi={pageApi} setPageApi={setPageApi} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}